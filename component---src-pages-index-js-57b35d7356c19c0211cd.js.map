{"version":3,"file":"component---src-pages-index-js-57b35d7356c19c0211cd.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@mui/icons-material/esm/Edit.js","webpack://gatsby-starter-default/./node_modules/@mui/icons-material/esm/Delete.js","webpack://gatsby-starter-default/./node_modules/@mui/icons-material/esm/Check.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { navigate } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveIcon from '@mui/icons-material/Check';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst AppsPage = () => {\n  const [bookmarkedApps, setBookmarkedApps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [editingId, setEditingId] = useState(null);\n  const [editedLabel, setEditedLabel] = useState('');\n\n  useEffect(() => {\n    try {\n      const stored = localStorage.getItem('bookmarks');\n      const parsed = stored ? JSON.parse(stored) : [];\n      setBookmarkedApps(parsed);\n    } catch (e) {\n      console.error('Failed to load bookmarks:', e);\n      setBookmarkedApps([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const saveToLocalStorage = (updatedApps) => {\n    localStorage.setItem('bookmarks', JSON.stringify(updatedApps));\n  };\n\n  const handleCardClick = (path) => {\n    navigate(path);\n  };\n\n  const handleDelete = (targetId) => {\n    const updated = bookmarkedApps.filter(\n      (app) => (app.id || app.url) !== targetId\n    );\n    setBookmarkedApps(updated);\n    saveToLocalStorage(updated);\n  };\n\n  const handleEdit = (appId, currentLabel) => {\n    setEditingId(appId);\n    setEditedLabel(currentLabel);\n  };\n\n  const handleSave = (appId) => {\n    const updated = bookmarkedApps.map((app) =>\n      (app.id || app.url) === appId ? { ...app, label: editedLabel } : app\n    );\n    setBookmarkedApps(updated);\n    saveToLocalStorage(updated);\n    setEditingId(null);\n    setEditedLabel('');\n  };\n\n  const renderAppCards = (appsArray) =>\n    appsArray.map((app) => {\n      const id = app.id || app.url;\n      const randomColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n      const isEditing = editingId === id;\n\n      return (\n        <Grid item key={id} xs={12} sm={6} md={4}>\n          <Card\n            sx={{\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between',\n              cursor: 'pointer',\n              position: 'relative',\n            }}\n          >\n            <Box onClick={() => handleCardClick(app.url)}>\n              {app.cover ? (\n                <CardMedia component=\"img\" height=\"200\" image={app.cover} alt={app.title} />\n              ) : (\n                <Box\n                  sx={{\n                    height: 200,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: randomColor,\n                    color: '#fff',\n                    fontSize: '1.5rem',\n                    fontWeight: 500,\n                    textAlign: 'center',\n                  }}\n                >\n                  {app.label}\n                </Box>\n              )}\n              <CardContent sx={{ flexGrow: 1, textAlign: 'center' }}>\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                  {app.title}\n                </Typography>\n                <Typography variant=\"body1\" color=\"text.secondary\">\n                  {app.description}\n                </Typography>\n              </CardContent>\n            </Box>\n\n            {/* Editable Label and Actions */}\n            <Box\n              sx={{\n                px: 2,\n                pb: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}\n            >\n              {isEditing ? (\n                <>\n                  <TextField\n                    variant=\"standard\"\n                    value={editedLabel}\n                    onChange={(e) => setEditedLabel(e.target.value)}\n                    fullWidth\n                    inputProps={{ style: { textAlign: 'center' } }}\n                  />\n                  <IconButton onClick={() => handleSave(id)} color=\"primary\">\n                    <SaveIcon />\n                  </IconButton>\n                </>\n              ) : (\n                <>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    {app.label}\n                  </Typography>\n                  <Box>\n                    <IconButton onClick={() => handleEdit(id, app.label)} color=\"primary\">\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton onClick={() => handleDelete(id)} color=\"error\">\n                      <DeleteIcon />\n                    </IconButton>\n                  </Box>\n                </>\n              )}\n            </Box>\n          </Card>\n        </Grid>\n      );\n    });\n\n  return (\n    <Layout>\n      <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n          Dashboard\n        </Typography>\n\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : bookmarkedApps.length > 0 ? (\n          <Grid container spacing={4}>{renderAppCards(bookmarkedApps)}</Grid>\n        ) : (\n          <Typography variant=\"body1\" align=\"center\" sx={{ mt: 4 }}>\n            You haven't bookmarked any apps yet.\n          </Typography>\n        )}\n      </Box>\n    </Layout>\n  );\n};\n\nexport default AppsPage;\n"],"names":["createSvgIcon","d","bookmarkedApps","setBookmarkedApps","useState","loading","setLoading","editingId","setEditingId","editedLabel","setEditedLabel","useEffect","stored","localStorage","getItem","parsed","JSON","parse","e","console","error","saveToLocalStorage","updatedApps","setItem","stringify","Layout","Box","sx","maxWidth","mx","p","Typography","variant","component","gutterBottom","align","display","justifyContent","mt","CircularProgress","length","Grid","container","spacing","map","app","id","url","randomColor","Math","floor","random","toString","isEditing","item","key","xs","sm","md","Card","height","flexDirection","cursor","position","onClick","handleCardClick","path","navigate","cover","CardMedia","image","alt","title","alignItems","backgroundColor","color","fontSize","fontWeight","textAlign","label","CardContent","flexGrow","description","px","pb","TextField","value","onChange","target","fullWidth","inputProps","style","IconButton","appId","updated","handleSave","mb","handleEdit","currentLabel","Edit","targetId","filter","handleDelete","Delete"],"sourceRoot":""}