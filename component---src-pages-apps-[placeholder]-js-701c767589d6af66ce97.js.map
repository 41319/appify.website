{"version":3,"file":"component---src-pages-apps-[placeholder]-js-701c767589d6af66ce97.js","mappings":"uQAoJA,UAtIiB,IAAqB,IAApB,YAAEA,GAAa,EAC/B,MAAM,EAACC,EAAI,EAAEC,IAAWC,EAAAA,EAAAA,UAAS,KAC3B,EAACC,EAAO,EAAEC,IAAcF,EAAAA,EAAAA,WAAS,IAIvCG,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMN,QAAaO,EAAAA,EAAMC,MAAMC,IAAI,UAAW,CAC5CC,KAAM,QAAQX,IAEhBE,EAAQD,EACV,CAAE,MAAOW,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,CAAE,QACAP,GAAW,EACb,GAGFS,EAAW,GACV,CAACd,IAEJ,MAIMe,EAAed,EACfe,EAAcf,EAAKgB,QAAQC,GAAuB,YAAfA,EAAIC,SAEvCC,EAAkBC,GACtBA,EAAUC,KAAKJ,IACb,MAAMK,EAAc,IAAIC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IACtE,OACE,QAAC,KAAI,CAACC,MAAI,EAACC,IAAKX,EAAIY,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,IACzC,QAAC,IAAI,CACHC,GAAI,CACFC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,OAAQ,UACRC,QAAwB,YAAfrB,EAAIC,OAAuB,GAAM,EAC1CqB,cAA8B,YAAftB,EAAIC,OAAuB,OAAS,QAGrDsB,QAAS,KAAMC,OAtBA/B,EAsBgB,GAAGO,EAAIP,UArB9CgC,EAAAA,EAAAA,UAAShC,GADcA,KAsB+B,IAG5CO,aAAG,EAAHA,EAAK0B,SAAS,QAAC,IAAS,CACtBC,UAAU,MACVV,OAAO,MACPW,MAAO5B,aAAG,EAAHA,EAAK0B,MACZG,IAAI,kBAIH7B,SAAAA,EAAK0B,SAAS,QAAC,IAAG,CACrBV,GAAI,CACFC,OAAQ,IACRC,QAAS,OACTY,WAAY,SACZC,eAAgB,SAChBC,gBAAiB3B,EACjB4B,MAAO,OACPC,SAAU,SACVC,WAAY,IACZC,UAAW,WAGZpC,EAAIqC,QAGP,QAAC,IAAW,CAACrB,GAAI,CAAEsB,SAAU,GAAKC,MAAO,CAAEH,UAAW,YACpD,QAAC,IAAU,CAACI,QAAQ,KAAKb,UAAU,KAAKc,cAAY,GAC/CzC,EAAIqC,QAGT,QAAC,IAAU,CAACG,QAAQ,QAAQP,MAAM,kBAC/BjC,EAAI0C,aAES,YAAf1C,EAAIC,SACH,QAAC,IAAU,CAACuC,QAAQ,UAAUP,MAAM,SAAQ,sBAM7C,IAIb,OACE,QAAC,IAAM,MACL,QAAC,IAAG,CAACjB,GAAI,CAAE2B,SAAU,KAAMC,GAAI,OAAQC,EAAG,KACxC,QAAC,IAAU,CAACL,QAAQ,KAAKb,UAAU,KAAKc,cAAY,EAACK,MAAM,UAAS,gBAInE5D,GACC,QAAC,IAAG,CAAC8B,GAAI,CAAEE,QAAS,OAAQa,eAAgB,SAAUgB,GAAI,KACxD,QAAC,IAAgB,QAGnB,wBAEGlD,EAAamD,OAAS,IACrB,yBACE,QAAC,IAAU,CAACR,QAAQ,KAAKb,UAAU,KAAKc,cAAY,GAAC,mBAGrD,QAAC,KAAI,CAACQ,WAAS,EAACC,QAAS,EAAGlC,GAAI,CAAEmC,GAAI,IACnCjD,EAAeL,KAMrBC,EAAYkD,OAAS,IACpB,yBACE,QAAC,IAAU,CAACR,QAAQ,KAAKb,UAAU,KAAKc,cAAY,EAACzB,GAAI,CAAE+B,GAAI,IAAK,qBAGpE,QAAC,KAAI,CAACE,WAAS,EAACC,QAAS,GACtBhD,EAAeJ,OAOrB,C","sources":["webpack://gatsby-starter-default/./src/pages/apps/[placeholder].js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { navigate } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Parse from '../../vendor/Parse';\nimport CardMedia from '@mui/material/CardMedia';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\nconst AppsPage = ({ placeholder }) => {\n  const [apps, setApps] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n\n\n  useEffect(() => {\n    const fetchApps = async () => {\n      try {\n        const apps = await Parse.Cloud.run('getApps', {\n          path: `menu/${placeholder}`,\n        });\n        setApps(apps);\n      } catch (error) {\n        console.error('Failed to fetch apps:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchApps();\n  }, [placeholder]);\n\n  const handleCardClick = (path) => {\n    navigate(path);\n  };\n\n  const approvedApps = apps//.filter((app) => app.status === 'approved');\n  const pendingApps = apps.filter((app) => app.status === 'pending');\n\n  const renderAppCards = (appsArray) =>\n    appsArray.map((app) => {\n      const randomColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n      return (\n        <Grid item key={app.id} xs={12} sm={6} md={4}>\n          <Card\n            sx={{\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              cursor: 'pointer',\n              opacity: app.status === 'pending' ? 0.6 : 1,\n              pointerEvents: app.status === 'pending' ? 'none' : 'auto',\n\n            }}\n            onClick={() => handleCardClick(`${app.path}`)}\n          >\n            {\n              app?.cover && <CardMedia\n                component=\"img\"\n                height=\"200\"\n                image={app?.cover}\n                alt=\"Paella dish\"\n              />\n            }\n            {\n                !app?.cover && <Box\n              sx={{\n                height: 200,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: randomColor,\n                color: '#fff',\n                fontSize: '1.5rem',\n                fontWeight: 500,\n                textAlign: 'center'\n              }}\n            >\n              {app.title}\n            </Box>\n    }\n            <CardContent sx={{ flexGrow: 1 }} style={{ textAlign: 'center' }}>\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                  {app.title}\n                </Typography>\n            \n              <Typography variant=\"body1\" color=\"text.secondary\">\n                {app.description}\n              </Typography>\n              {app.status === 'pending' && (\n                <Typography variant=\"caption\" color=\"error\">\n                  Pending approval\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      );\n    });\n\n  return (\n    <Layout>\n      <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n          Apps Gallery\n        </Typography>\n\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : (\n          <>\n            {/* Approved Apps Section */}\n            {approvedApps.length > 0 && (\n              <>\n                <Typography variant=\"h4\" component=\"h2\" gutterBottom>\n                  Available Apps\n                </Typography>\n                <Grid container spacing={4} sx={{ mb: 6 }}>\n                  {renderAppCards(approvedApps)}\n                </Grid>\n              </>\n            )}\n\n            {/* Pending Approval Section */}\n            {pendingApps.length > 0 && (\n              <>\n                <Typography variant=\"h4\" component=\"h2\" gutterBottom sx={{ mt: 6 }}>\n                  Pending Approval\n                </Typography>\n                <Grid container spacing={4}>\n                  {renderAppCards(pendingApps)}\n                </Grid>\n              </>\n            )}\n          </>\n        )}\n      </Box>\n    </Layout>\n  );\n};\n\nexport default AppsPage;\n"],"names":["placeholder","apps","setApps","useState","loading","setLoading","useEffect","async","Parse","Cloud","run","path","error","console","fetchApps","approvedApps","pendingApps","filter","app","status","renderAppCards","appsArray","map","randomColor","Math","floor","random","toString","item","key","id","xs","sm","md","sx","height","display","flexDirection","cursor","opacity","pointerEvents","onClick","handleCardClick","navigate","cover","component","image","alt","alignItems","justifyContent","backgroundColor","color","fontSize","fontWeight","textAlign","title","flexGrow","style","variant","gutterBottom","description","maxWidth","mx","p","align","mt","length","container","spacing","mb"],"sourceRoot":""}