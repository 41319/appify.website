{"version":3,"file":"component---src-pages-app-[placeholder]-js-3333cedd050b6d1c7db5.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/helpers/git.js","webpack://gatsby-starter-default/./src/pages/app/[placeholder].js"],"sourcesContent":["export const basicHTMLApp = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Welcome to AppSeek</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f0f0f0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n      margin: 0;\n      flex-direction: column;\n      text-align: center;\n    }\n    h1 {\n      color: #1976d2;\n      margin-bottom: 20px;\n    }\n    .instructions {\n      background-color: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      max-width: 600px;\n      width: 100%;\n    }\n    .instructions p {\n      margin: 10px 0;\n      line-height: 1.6;\n    }\n    .instructions code {\n      background-color: #f5f5f5;\n      padding: 4px 8px;\n      border-radius: 4px;\n      font-family: monospace;\n    }\n  </style>\n</head>\n<body>\n  <h1>Welcome to AppSeek</h1>\n  <div class=\"instructions\">\n    <p>Follow these steps to create your application:</p>\n    <ol>\n      <li>\n        <strong>Step 1: Describe Your App</strong>\n        <p>In the <strong>\"Step 1: What you want to do?\"</strong> section, describe the application you want to build. For example:</p>\n        <code>\"Create a to-do list app with a dark theme.\"</code>\n      </li>\n      <li>\n        <strong>Step 2: Copy the Enhanced Prompt</strong>\n        <p>Once you describe your app, the <strong>\"Step 2: Copy this\"</strong> section will generate an enhanced prompt. Copy this prompt and paste it into the AI chat.</p>\n      </li>\n      <li>\n        <strong>Step 3: Build Your App</strong>\n        <p>Use the AI-generated code to build your app. You can edit the code in the <strong>Code Editor</strong> and see the live preview in the <strong>Your Awesome App</strong> section.</p>\n      </li>\n      <li>\n        <strong>Step 4: Deploy Your App</strong>\n        <p>Once your app is ready, click the <strong>Deploy</strong> button to publish it.</p>\n      </li>\n    </ol>\n    <p>Happy coding! ðŸš€</p>\n  </div>\n  <script>\n    console.log('AppSeek is ready to help you build amazing apps!');\n  </script>\n</body>\n</html>\n`.trim(); // Remove leading/trailing whitespace","import React, { useState, useEffect, useRef } from 'react';\nimport Layout from '../../components/Layout';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n} from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { SnackbarAlert } from '../../components/placeholder/SnackbarAlert';\nimport { AIChat } from '../../components/placeholder/AIChat';\nimport { PromptSection } from '../../components/placeholder/PromptSection';\nimport { basicHTMLApp } from '../../helpers/git';\nimport LoginModal from '../../components/LoginModal';\nimport Parse from '../../vendor/Parse';\nimport Editor from '@monaco-editor/react';\nimport Frame from 'react-frame-component';\n\nconst AppPage = ({ location, placeholder }) => {\n  const [state, setState] = useState({\n    prompt: '',\n    enhancedPrompt: '',\n    files: {\n      '/index.html': {\n        code: basicHTMLApp,\n      },\n      '/style.css': {\n        code: '',\n      },\n      '/script.js': {\n        code: '',\n      },\n    },\n    snackbarOpen: false,\n    snackbarMessage: '',\n    snackbarSeverity: 'info',\n    systemPrompt: 'create web application in a single html file, making sure UI is properly align and user experience is taken care of',\n    showCodeEditor: true,\n    showAppOutput: true,\n    showAI: true,\n    loginModalOpen: false,\n    user: null,\n    isAppDeployed: false,\n    deployModalOpen: false,\n    isDeploying: false,\n    deployStatusMessage: '',\n    isPromoting: false,\n    promoteModalOpen: false,\n    src: placeholder,\n    dest: '',\n    token: '',\n  });\n\n  const frameRef = useRef(null);\n  const [frameLoaded, setFrameLoaded] = useState(false);\n\n  const {\n    prompt,\n    enhancedPrompt,\n    files,\n    snackbarOpen,\n    snackbarMessage,\n    snackbarSeverity,\n    systemPrompt,\n    showCodeEditor,\n    showAppOutput,\n    showAI,\n    loginModalOpen,\n    user,\n    isAppDeployed,\n    deployModalOpen,\n    isDeploying,\n    deployStatusMessage,\n    isPromoting,\n    promoteModalOpen,\n    src,\n    dest,\n    token,\n  } = state;\n\n  const queryParams = new URLSearchParams(location.search);\n  const showPromoteButton = queryParams.has('p') && isAppDeployed;\n  const urlPrompt = queryParams.get('prompt');\n\n  const fetchAppData = async () => {\n    try {\n      const result = await Parse.Cloud.run('getApp', { id: placeholder });\n      if (result?.files && Object.keys(result.files).length > 0) {\n        const normalizedFiles = {\n          '/index.html': { \n            code: result.files['index.html'] || result.files['/index.html'] || basicHTMLApp \n          },\n          '/style.css': { \n            code: result.files['style.css'] || result.files['/style.css'] || '' \n          },\n          '/script.js': { \n            code: result.files['script.js'] || result.files['/script.js'] || '' \n          }\n        };\n        \n        setState(prev => ({\n          ...prev,\n          files: normalizedFiles,\n          isAppDeployed: true\n        }));\n      } else {\n        setState(prev => ({\n          ...prev,\n          isAppDeployed: false,\n          files: {\n            '/index.html': { code: basicHTMLApp },\n            '/style.css': { code: '' },\n            '/script.js': { code: '' }\n          }\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching app data:', error);\n      setState(prev => ({\n        ...prev,\n        isAppDeployed: false,\n        files: {\n          '/index.html': { code: basicHTMLApp },\n          '/style.css': { code: '' },\n          '/script.js': { code: '' }\n        },\n        snackbarMessage: 'Failed to load app data',\n        snackbarSeverity: 'error',\n        snackbarOpen: true\n      }));\n    }\n  };\n\n  useEffect(() => {\n    fetchAppData();\n  }, [placeholder]);\n\n  useEffect(() => {\n    const combinedCode = Object.values(files)\n      .map((file) => file.code)\n      .join('\\n\\n');\n    \n    const enhancedPrompt = `${combinedCode}\\n\\n${prompt}\\n\\n${systemPrompt}`;\n    \n    setState((prev) => ({ ...prev, enhancedPrompt }));\n  }, [files, prompt, systemPrompt]);\n\n  useEffect(() => {\n    const currentUser = Parse.User.current();\n    if (currentUser) setState((prev) => ({ ...prev, user: currentUser }));\n  }, []);\n\n  useEffect(() => {\n    if (urlPrompt) {\n      setState((prev) => ({ ...prev, systemPrompt: urlPrompt }));\n    }\n  }, [urlPrompt]);\n\n  const handleCopyPrompt = () => {\n    navigator.clipboard.writeText(enhancedPrompt).then(() => {\n      setState((prev) => ({ \n        ...prev, \n        snackbarMessage: 'Prompt copied to clipboard!', \n        snackbarSeverity: 'success', \n        snackbarOpen: true \n      }));\n    }).catch(() => {\n      setState((prev) => ({ \n        ...prev, \n        snackbarMessage: 'Failed to copy prompt', \n        snackbarSeverity: 'error', \n        snackbarOpen: true \n      }));\n    });\n  };\n\n  const handlePromptChange = (e) => {\n    setState((prev) => ({ ...prev, prompt: e.target.value }));\n  };\n\n  const handleDeploy = async () => {\n    try {\n      const result = await Parse.Cloud.run('deployApp', { files, placeholder });\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'App deployed successfully!',\n        snackbarSeverity: 'success',\n        snackbarOpen: true,\n        isAppDeployed: true,\n        deployStatusMessage: 'A link will appear beside the app name',\n        isDeploying: false\n      }));\n\n      setTimeout(() => {\n        setState((prev) => ({ ...prev, deployStatusMessage: '' }));\n      }, 3000);\n\n      console.log('Deployment result:', result);\n    } catch (error) {\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'Failed to deploy app. Please try again.',\n        snackbarSeverity: 'error',\n        snackbarOpen: true,\n        isDeploying: false\n      }));\n      console.error('Deployment error:', error);\n    }\n  };\n\n  const handleLoginSuccess = () => {\n    const currentUser = Parse.User.current();\n    setState((prev) => ({ ...prev, user: currentUser, loginModalOpen: false }));\n  };\n\n  const handleDeployClick = () => {\n    setState((prev) => ({ ...prev, deployModalOpen: true }));\n  };\n\n  const handleDeployConfirm = () => {\n    setState((prev) => ({ ...prev, deployModalOpen: false, isDeploying: true }));\n    handleDeploy();\n  };\n\n  const handleFilesChange = (filePath, newCode) => {\n    setState((prev) => ({\n      ...prev,\n      files: {\n        ...prev.files,\n        [filePath]: {\n          code: newCode,\n        },\n      },\n    }));\n  };\n\n  const handlePromoteClick = () => {\n    setState((prev) => ({ ...prev, promoteModalOpen: true }));\n  };\n\n  const handlePromoteConfirm = async () => {\n    setState((prev) => ({ ...prev, isPromoting: true }));\n\n    try {\n      const result = await Parse.Cloud.run('copyApp', { src, dest, token });\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'App promoted successfully!',\n        snackbarSeverity: 'success',\n        snackbarOpen: true,\n        isPromoting: false,\n        promoteModalOpen: false,\n      }));\n      console.log('Promotion result:', result);\n    } catch (error) {\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'Failed to promote app. Please try again.',\n        snackbarSeverity: 'error',\n        snackbarOpen: true,\n        isPromoting: false,\n      }));\n      console.error('Promotion error:', error);\n    }\n  };\n\n  const handlePromoteModalClose = () => {\n    setState((prev) => ({ ...prev, promoteModalOpen: false }));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleFrameLoad = () => {\n    setFrameLoaded(true);\n  };\n\n  const generateIframeContent = () => {\n    const { code: htmlCode = '' } = files['/index.html'] || {};\n    const { code: cssCode = '' } = files['/style.css'] || {};\n    const { code: jsCode = '' } = files['/script.js'] || {};\n\n    return `<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <style>${cssCode}</style>\n</head>\n<body>\n  ${htmlCode}\n  <script>${jsCode}</script>\n</body>\n</html>`;\n  };\n\n  return (\n    <Layout\n      deployButton={<Button variant=\"contained\" onClick={handleDeployClick}>Deploy</Button>}\n      promoteButton={\n        showPromoteButton && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handlePromoteClick}\n            disabled={isPromoting}\n          >\n            Promote\n          </Button>\n        )\n      }\n    >\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minHeight: '80vh', textAlign: 'center' }}>\n        {showCodeEditor && (\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: { xs: 'column', md: 'row' },\n              width: '100%',\n              gap: 2,\n              mb: 4,\n            }}\n          >\n            <Box sx={{ flex: 1, height: { xs: '300px', md: '600px' }, border: '1px solid #ccc' }}>\n              <Editor\n                height=\"100%\"\n                width=\"100%\"\n                theme=\"vs-light\"\n                defaultLanguage=\"html\"\n                value={files['/index.html'].code}\n                onChange={(value) => handleFilesChange('/index.html', value)}\n                options={{\n                  minimap: { enabled: false },\n                  fontSize: 14,\n                  scrollBeyondLastLine: false,\n                }}\n              />\n            </Box>\n\n            <Box sx={{ flex: 1, height: { xs: '300px', md: '600px' }, border: '1px solid #ccc' }}>\n              <Frame\n                ref={frameRef}\n                style={{ width: '100%', height: '100%', border: 'none' }}\n                initialContent={generateIframeContent()}\n                onLoad={handleFrameLoad}\n                mountTarget=\"#mount-target\"\n              >\n                {frameLoaded && (\n                  <div id=\"mount-target\">\n                    {/* Content will be mounted here */}\n                  </div>\n                )}\n              </Frame>\n            </Box>\n          </Box>\n        )}\n\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: { xs: 'column', md: 'row' },\n            width: '100%',\n            gap: 2,\n            mt: 2,\n          }}\n        >\n          <Box sx={{ flex: 2 }}>\n            <PromptSection\n              prompt={prompt}\n              setPrompt={(value) => setState((prev) => ({ ...prev, prompt: value }))}\n              enhancedPrompt={enhancedPrompt}\n              handleCopyPrompt={handleCopyPrompt}\n              systemPrompt={systemPrompt}\n              setSystemPrompt={(value) => setState((prev) => ({ ...prev, systemPrompt: value }))}\n            />\n          </Box>\n        </Box>\n\n        {deployStatusMessage && <Typography variant=\"body1\" color=\"textSecondary\">{deployStatusMessage}</Typography>}\n\n        <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n          {!showCodeEditor && <Button variant=\"outlined\" onClick={() => setState((prev) => ({ ...prev, showCodeEditor: true }))} startIcon={<VisibilityIcon />}>Show Code Editor</Button>}\n          {!showAppOutput && <Button variant=\"outlined\" onClick={() => setState((prev) => ({ ...prev, showAppOutput: true }))} startIcon={<VisibilityIcon />}>Show App Output</Button>}\n        </Box>\n      </Box>\n\n      <LoginModal \n        open={loginModalOpen} \n        onClose={() => setState((prev) => ({ ...prev, loginModalOpen: false }))} \n        onLoginSuccess={handleLoginSuccess} \n      />\n\n      <Dialog open={deployModalOpen} onClose={() => setState((prev) => ({ ...prev, deployModalOpen: false }))}>\n        <DialogTitle>Bookmark This App</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Before deploying, we recommend bookmarking this app to avoid losing it. Press <strong>Ctrl+D</strong> (Windows/Linux) or <strong>Cmd+D</strong> (Mac) to bookmark this page. Once Deployed, there will be a link beside the app name.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setState((prev) => ({ ...prev, deployModalOpen: false }))}>Cancel</Button>\n          <Button onClick={handleDeployConfirm} color=\"primary\" variant=\"contained\" disabled={isDeploying}>\n            {isDeploying ? 'Deploying...' : 'Deploy'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={promoteModalOpen} onClose={handlePromoteModalClose}>\n        <DialogTitle>Promote App</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            label=\"Source App ID\"\n            name=\"src\"\n            value={`${src}/index.html`}\n            onChange={handleInputChange}\n            margin=\"normal\"\n            disabled\n          />\n          <TextField\n            fullWidth\n            label=\"Destination App ID\"\n            name=\"dest\"\n            value={dest}\n            onChange={handleInputChange}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Token\"\n            name=\"token\"\n            value={token}\n            onChange={handleInputChange}\n            margin=\"normal\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePromoteModalClose}>Cancel</Button>\n          <Button onClick={handlePromoteConfirm} color=\"primary\" variant=\"contained\" disabled={isPromoting}>\n            {isPromoting ? 'Promoting...' : 'Promote'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <SnackbarAlert \n        open={snackbarOpen} \n        message={snackbarMessage} \n        severity={snackbarSeverity} \n        onClose={() => setState((prev) => ({ ...prev, snackbarOpen: false }))} \n      />\n    </Layout>\n  );\n};\n\nexport default AppPage;"],"names":["basicHTMLApp","trim","location","placeholder","state","setState","useState","prompt","enhancedPrompt","files","code","snackbarOpen","snackbarMessage","snackbarSeverity","systemPrompt","showCodeEditor","showAppOutput","showAI","loginModalOpen","user","isAppDeployed","deployModalOpen","isDeploying","deployStatusMessage","isPromoting","promoteModalOpen","src","dest","token","frameRef","useRef","frameLoaded","setFrameLoaded","queryParams","URLSearchParams","search","showPromoteButton","has","urlPrompt","get","useEffect","async","result","Parse","Cloud","run","id","Object","keys","length","normalizedFiles","prev","error","console","fetchAppData","values","map","file","join","currentUser","User","current","handlePromoteModalClose","handleInputChange","e","name","value","target","Layout","deployButton","Button","variant","onClick","promoteButton","color","disabled","Box","sx","display","flexDirection","alignItems","justifyContent","minHeight","textAlign","xs","md","width","gap","mb","flex","height","border","theme","defaultLanguage","onChange","handleFilesChange","filePath","newCode","options","minimap","enabled","fontSize","scrollBeyondLastLine","ref","style","initialContent","htmlCode","cssCode","jsCode","generateIframeContent","onLoad","mountTarget","mt","PromptSection","setPrompt","handleCopyPrompt","navigator","clipboard","writeText","then","catch","setSystemPrompt","Typography","startIcon","Visibility","LoginModal","open","onClose","onLoginSuccess","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","setTimeout","log","handleDeploy","TextField","fullWidth","label","margin","SnackbarAlert","message","severity"],"sourceRoot":""}