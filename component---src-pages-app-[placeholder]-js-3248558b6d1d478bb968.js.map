{"version":3,"file":"component---src-pages-app-[placeholder]-js-3248558b6d1d478bb968.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/helpers/git.js","webpack://gatsby-starter-default/./src/pages/app/[placeholder].js"],"sourcesContent":["export const basicHTMLApp = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Welcome to AppSeek</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f0f0f0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100vh;\n      margin: 0;\n      flex-direction: column;\n      text-align: center;\n    }\n    h1 {\n      color: #1976d2;\n      margin-bottom: 20px;\n    }\n    .instructions {\n      background-color: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      max-width: 600px;\n      width: 100%;\n    }\n    .instructions p {\n      margin: 10px 0;\n      line-height: 1.6;\n    }\n    .instructions code {\n      background-color: #f5f5f5;\n      padding: 4px 8px;\n      border-radius: 4px;\n      font-family: monospace;\n    }\n  </style>\n</head>\n<body>\n  <h1>Welcome to AppSeek</h1>\n  <div class=\"instructions\">\n    <p>Follow these steps to create your application:</p>\n    <ol>\n      <li>\n        <strong>Step 1: Describe Your App</strong>\n        <p>In the <strong>\"Step 1: What you want to do?\"</strong> section, describe the application you want to build. For example:</p>\n        <code>\"Create a to-do list app with a dark theme.\"</code>\n      </li>\n      <li>\n        <strong>Step 2: Copy the Enhanced Prompt</strong>\n        <p>Once you describe your app, the <strong>\"Step 2: Copy this\"</strong> section will generate an enhanced prompt. Copy this prompt and paste it into the AI chat.</p>\n      </li>\n      <li>\n        <strong>Step 3: Build Your App</strong>\n        <p>Use the AI-generated code to build your app. You can edit the code in the <strong>Code Editor</strong> and see the live preview in the <strong>Your Awesome App</strong> section.</p>\n      </li>\n      <li>\n        <strong>Step 4: Deploy Your App</strong>\n        <p>Once your app is ready, click the <strong>Deploy</strong> button to publish it.</p>\n      </li>\n    </ol>\n    <p>Happy coding! ðŸš€</p>\n  </div>\n  <script>\n    console.log('AppSeek is ready to help you build amazing apps!');\n  </script>\n</body>\n</html>\n`.trim(); // Remove leading/trailing whitespace","import React, { useState, useEffect } from 'react';\nimport Layout from '../../components/Layout';\nimport {\n  Box,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n} from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { SnackbarAlert } from '../../components/placeholder/SnackbarAlert';\nimport { AIChat } from '../../components/placeholder/AIChat';\nimport { PromptSection } from '../../components/placeholder/PromptSection';\nimport { basicHTMLApp } from '../../helpers/git';\nimport LoginModal from '../../components/LoginModal';\nimport Parse from '../../vendor/Parse';\nimport Editor from '@monaco-editor/react'; // Import Monaco Editor\nimport Frame from 'react-frame-component'; // Import react-frame-component\n\nconst AppPage = ({ location, placeholder }) => {\n  const [state, setState] = useState({\n    prompt: '',\n    enhancedPrompt: '',\n    files: {\n      '/index.html': {\n        code: `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>AppSeek Tutorial</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f4f4f9;\n      color: #333;\n      padding: 20px;\n      margin: 0;\n    }\n    .tutorial-container {\n      max-width: 800px;\n      margin: 0 auto;\n      background: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      color: #6200ea;\n    }\n    .step {\n      margin-bottom: 20px;\n    }\n    .step h2 {\n      color: #3700b3;\n    }\n    .step p {\n      line-height: 1.6;\n    }\n    .step button {\n      background-color: #6200ea;\n      color: #fff;\n      border: none;\n      padding: 10px 20px;\n      border-radius: 5px;\n      cursor: pointer;\n      margin-top: 10px;\n    }\n    .step button:hover {\n      background-color: #3700b3;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"tutorial-container\">\n    <h1>Welcome to AppSeek!</h1>\n    <div class=\"step\">\n      <h2>Step 1: Write Your Code</h2>\n      <p>Use the code editor on the left to write your HTML, CSS, and JavaScript. The preview will update automatically.</p>\n    </div>\n    <div class=\"step\">\n      <h2>Step 2: Deploy Your App</h2>\n      <p>Once you're happy with your app, click the \"Deploy\" button to publish it online.</p>\n      <button onclick=\"alert('Your app is deployed!')\">Deploy Now</button>\n    </div>\n    <div class=\"step\">\n      <h2>Step 3: Share Your App</h2>\n      <p>Share the link to your app with others and get feedback.</p>\n    </div>\n  </div>\n</body>\n</html>`, // Default HTML for the tutorial\n      },\n      '/style.css': {\n        code: ``, // Default empty CSS file\n      },\n      '/script.js': {\n        code: ``, // Default empty JS file\n      },\n    },\n    snackbarOpen: false,\n    snackbarMessage: '',\n    snackbarSeverity: 'info',\n    systemPrompt: 'create web application in a single html file, making sure UI is properly align and user experience is taken care of',\n    showCodeEditor: true,\n    showAppOutput: true,\n    showAI: true,\n    loginModalOpen: false,\n    user: null,\n    isAppDeployed: false,\n    deployModalOpen: false,\n    isDeploying: false,\n    deployStatusMessage: '',\n    isPromoting: false,\n    promoteModalOpen: false,\n    src: placeholder,\n    dest: '',\n    token: '',\n  });\n\n  const {\n    prompt,\n    enhancedPrompt,\n    files,\n    snackbarOpen,\n    snackbarMessage,\n    snackbarSeverity,\n    systemPrompt,\n    showCodeEditor,\n    showAppOutput,\n    showAI,\n    loginModalOpen,\n    user,\n    isAppDeployed,\n    deployModalOpen,\n    isDeploying,\n    deployStatusMessage,\n    isPromoting,\n    promoteModalOpen,\n    src,\n    dest,\n    token,\n  } = state;\n\n  const queryParams = new URLSearchParams(location.search);\n  const showPromoteButton = queryParams.has('p') && isAppDeployed;\n  const urlPrompt = queryParams.get('prompt');\n\n  useEffect(() => {\n    const fetchAppData = async () => {\n      try {\n        const result = await Parse.Cloud.run('getApp', { id: placeholder });\n        if (result?.files && Object.keys(result.files).length > 0) {\n          setState((prev) => ({ ...prev, files: result.files, isAppDeployed: true }));\n        } else {\n          setState((prev) => ({ ...prev, isAppDeployed: false }));\n        }\n      } catch (error) {\n        console.error('Error fetching app data:', error);\n        setState((prev) => ({ ...prev, isAppDeployed: false }));\n      }\n    };\n\n    fetchAppData();\n  }, [placeholder]);\n\n  // Update enhancedPrompt whenever files or prompt changes\n  useEffect(() => {\n    const combinedCode = Object.values(files)\n      .map((file) => file.code)\n      .join('\\n\\n');\n    \n    const enhancedPrompt = `${combinedCode}\\n\\n${prompt}\\n\\n${systemPrompt}`;\n    \n    setState((prev) => ({ ...prev, enhancedPrompt }));\n  }, [files, prompt, systemPrompt]);\n\n  useEffect(() => {\n    const currentUser = Parse.User.current();\n    if (currentUser) setState((prev) => ({ ...prev, user: currentUser }));\n  }, []);\n\n  useEffect(() => {\n    if (urlPrompt) {\n      setState((prev) => ({ ...prev, systemPrompt: urlPrompt }));\n    }\n  }, [urlPrompt]);\n\n  const handleCopyPrompt = () => {\n    navigator.clipboard.writeText(enhancedPrompt).then(() => {\n      setState((prev) => ({ ...prev, snackbarMessage: 'Prompt copied to clipboard!', snackbarSeverity: 'success', snackbarOpen: true }));\n    });\n  };\n\n  const handlePromptChange = (e) => {\n    setState((prev) => ({ ...prev, prompt: e.target.value }));\n  };\n\n  const handleDeploy = async () => {\n    try {\n      const result = await Parse.Cloud.run('deployApp', { files, placeholder });\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'App deployed successfully!',\n        snackbarSeverity: 'success',\n        snackbarOpen: true,\n        isAppDeployed: true,\n        deployStatusMessage: 'A link will appear beside the app name',\n      }));\n\n      setTimeout(() => {\n        setState((prev) => ({ ...prev, deployStatusMessage: '' }));\n      }, 3000);\n\n      console.log('Deployment result:', result);\n    } catch (error) {\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'Failed to deploy app. Please try again.',\n        snackbarSeverity: 'error',\n        snackbarOpen: true,\n      }));\n      console.error('Deployment error:', error);\n    }\n  };\n\n  const handleLoginSuccess = () => {\n    const currentUser = Parse.User.current();\n    setState((prev) => ({ ...prev, user: currentUser }));\n  };\n\n  const handleDeployClick = () => {\n    setState((prev) => ({ ...prev, deployModalOpen: true }));\n  };\n\n  const handleDeployConfirm = () => {\n    setState((prev) => ({ ...prev, deployModalOpen: false, isDeploying: true }));\n    handleDeploy();\n  };\n\n  const handleFilesChange = (filePath, newCode) => {\n    setState((prev) => ({\n      ...prev,\n      files: {\n        ...prev.files,\n        [filePath]: {\n          code: newCode,\n        },\n      },\n    }));\n  };\n\n  const handlePromoteClick = () => {\n    setState((prev) => ({ ...prev, promoteModalOpen: true }));\n  };\n\n  const handlePromoteConfirm = async () => {\n    setState((prev) => ({ ...prev, isPromoting: true }));\n\n    try {\n      const result = await Parse.Cloud.run('copyApp', { src, dest, token });\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'App promoted successfully!',\n        snackbarSeverity: 'success',\n        snackbarOpen: true,\n        isPromoting: false,\n        promoteModalOpen: false,\n      }));\n      console.log('Promotion result:', result);\n    } catch (error) {\n      setState((prev) => ({\n        ...prev,\n        snackbarMessage: 'Failed to promote app. Please try again.',\n        snackbarSeverity: 'error',\n        snackbarOpen: true,\n        isPromoting: false,\n      }));\n      console.error('Promotion error:', error);\n    }\n  };\n\n  const handlePromoteModalClose = () => {\n    setState((prev) => ({ ...prev, promoteModalOpen: false }));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // Generate the React component for the iframe\n  const generateIframeContent = () => {\n    const { code: htmlCode } = files['/index.html'];\n    const { code: cssCode } = files['/style.css'];\n    const { code: jsCode } = files['/script.js'];\n\n    return (\n      <div>\n        <style>{cssCode}</style>\n        <div dangerouslySetInnerHTML={{ __html: htmlCode }} />\n        <script>{jsCode}</script>\n      </div>\n    );\n  };\n\n  return (\n    <Layout\n      deployButton={<Button variant=\"contained\" onClick={handleDeployClick}>Deploy</Button>}\n      promoteButton={\n        showPromoteButton && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handlePromoteClick}\n            disabled={isPromoting}\n          >\n            Promote\n          </Button>\n        )\n      }\n    >\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minHeight: '80vh', textAlign: 'center' }}>\n        {/* Code Editor and App Preview */}\n        {showCodeEditor && (\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: { xs: 'column', md: 'row' }, // Stack vertically on small screens, horizontally on medium and larger screens\n              width: '100%',\n              gap: 2,\n              mb: 4,\n            }}\n          >\n            {/* Monaco Editor on the Left */}\n            <Box sx={{ flex: 1, height: { xs: '300px', md: '600px' }, border: '1px solid #ccc' }}>\n              <Editor\n                height=\"100%\"\n                width=\"100%\"\n                theme=\"vs-light\"\n                defaultLanguage=\"html\"\n                value={files['/index.html'].code}\n                onChange={(value) => handleFilesChange('/index.html', value)}\n                options={{\n                  minimap: { enabled: false },\n                  fontSize: 14,\n                  scrollBeyondLastLine: false,\n                }}\n              />\n            </Box>\n\n            {/* Frame Preview on the Right */}\n            <Box sx={{ flex: 1, height: { xs: '300px', md: '600px' }, border: '1px solid #ccc' }}>\n              <Frame\n                style={{ width: '100%', height: '100%', border: 'none' }}\n\n              >\n                {generateIframeContent()}\n              </Frame>\n            </Box>\n          </Box>\n        )}\n\n        {/* PromptSection and AI Box */}\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: { xs: 'column', md: 'row' },\n            width: '100%',\n            gap: 2,\n            mt: 2,\n          }}\n        >\n          {/* PromptSection (Step 1 and Step 2) */}\n          <Box sx={{ flex: 2 }}>\n            <PromptSection\n              prompt={prompt}\n              setPrompt={(value) => setState((prev) => ({ ...prev, prompt: value }))}\n              enhancedPrompt={enhancedPrompt}\n              handleCopyPrompt={handleCopyPrompt}\n              systemPrompt={systemPrompt}\n              setSystemPrompt={(value) => setState((prev) => ({ ...prev, systemPrompt: value }))}\n            />\n          </Box>\n        </Box>\n\n        {deployStatusMessage && <Typography variant=\"body1\" color=\"textSecondary\">{deployStatusMessage}</Typography>}\n\n        <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n          {!showCodeEditor && <Button variant=\"outlined\" onClick={() => setState((prev) => ({ ...prev, showCodeEditor: true }))} startIcon={<VisibilityIcon />}>Show Code Editor</Button>}\n          {!showAppOutput && <Button variant=\"outlined\" onClick={() => setState((prev) => ({ ...prev, showAppOutput: true }))} startIcon={<VisibilityIcon />}>Show App Output</Button>}\n        </Box>\n      </Box>\n\n      <LoginModal open={loginModalOpen} onClose={() => setState((prev) => ({ ...prev, loginModalOpen: false }))} onLoginSuccess={handleLoginSuccess} />\n\n      <Dialog open={deployModalOpen} onClose={() => setState((prev) => ({ ...prev, deployModalOpen: false }))}>\n        <DialogTitle>Bookmark This App</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Before deploying, we recommend bookmarking this app to avoid losing it. Press <strong>Ctrl+D</strong> (Windows/Linux) or <strong>Cmd+D</strong> (Mac) to bookmark this page. Once Deployed, there will be a link beside the app name.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setState((prev) => ({ ...prev, deployModalOpen: false }))}>Cancel</Button>\n          <Button onClick={handleDeployConfirm} color=\"primary\" variant=\"contained\">Deploy</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={promoteModalOpen} onClose={handlePromoteModalClose}>\n        <DialogTitle>Promote App</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            label=\"Source App ID\"\n            name=\"src\"\n            value={`${src}/index.html`}\n            onChange={handleInputChange}\n            margin=\"normal\"\n            disabled\n          />\n          <TextField\n            fullWidth\n            label=\"Destination App ID\"\n            name=\"dest\"\n            value={`${dest}`}\n            onChange={handleInputChange}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Token\"\n            name=\"token\"\n            value={token}\n            onChange={handleInputChange}\n            margin=\"normal\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePromoteModalClose}>Cancel</Button>\n          <Button onClick={handlePromoteConfirm} color=\"primary\" variant=\"contained\" disabled={isPromoting}>\n            {isPromoting ? 'Promoting...' : 'Promote'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <SnackbarAlert open={snackbarOpen} message={snackbarMessage} severity={snackbarSeverity} onClose={() => setState((prev) => ({ ...prev, snackbarOpen: false }))} />\n    </Layout>\n  );\n};\n\nexport default AppPage;"],"names":["trim","location","placeholder","state","setState","useState","prompt","enhancedPrompt","files","code","snackbarOpen","snackbarMessage","snackbarSeverity","systemPrompt","showCodeEditor","showAppOutput","showAI","loginModalOpen","user","isAppDeployed","deployModalOpen","isDeploying","deployStatusMessage","isPromoting","promoteModalOpen","src","dest","token","queryParams","URLSearchParams","search","showPromoteButton","has","urlPrompt","get","useEffect","async","result","Parse","Cloud","run","id","Object","keys","length","prev","error","console","fetchAppData","values","map","file","join","currentUser","User","current","handlePromoteModalClose","handleInputChange","e","name","value","target","Layout","deployButton","Button","variant","onClick","promoteButton","color","disabled","Box","sx","display","flexDirection","alignItems","justifyContent","minHeight","textAlign","xs","md","width","gap","mb","flex","height","border","theme","defaultLanguage","onChange","handleFilesChange","filePath","newCode","options","minimap","enabled","fontSize","scrollBeyondLastLine","style","htmlCode","cssCode","jsCode","dangerouslySetInnerHTML","__html","generateIframeContent","mt","PromptSection","setPrompt","handleCopyPrompt","navigator","clipboard","writeText","then","setSystemPrompt","Typography","startIcon","Visibility","LoginModal","open","onClose","onLoginSuccess","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","setTimeout","log","handleDeploy","TextField","fullWidth","label","margin","SnackbarAlert","message","severity"],"sourceRoot":""}