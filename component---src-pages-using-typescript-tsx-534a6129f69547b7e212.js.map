{"version":3,"file":"component---src-pages-using-typescript-tsx-534a6129f69547b7e212.js","mappings":"0NAaA,MAgCaA,EAA0B,KAAMC,EAAAA,EAAAA,IAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,EAAAA,IAACM,EAAAA,EAAM,MACLN,EAAAA,EAAAA,IAAAA,KAAAA,KAAI,oBACc,iBAAG,2BAErBA,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,6CACwC,oBAAM,YAAe,2CAClC,oBAAM,YAAe,sCACzC,oBAAM,oBAAuB,OAEvCA,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,6CACwC,oBAAM,cAAiB,qBACxD,oBAAM,cAAiB,iBAAa,oBAAM,YAAe,WAEnEA,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,iCAC4B,oBAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,MAEhCT,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,kCAC+B,KAChCA,EAAAA,EAAAA,IAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,MAGNV,EAAAA,EAAAA,IAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,wDCEX,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEX,EAAK,SAAEY,GAAU,EAC3C,MAAM,KAAEN,IAASO,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBH,GAAeL,EAAKS,aAAaJ,YACnDK,EAAgC,QAApB,EAAGV,EAAKS,oBAAY,aAAjB,EAAmBf,MAExC,OACE,yBACE,qBAAQgB,EAAkBhB,EAAK,MAAMgB,EAAiBhB,IACtD,gBAAMiB,KAAK,cAAcC,QAASJ,KAClC,gBAAMK,SAAS,WAAWD,QAASlB,KACnC,gBAAMmB,SAAS,iBAAiBD,QAASJ,KACzC,gBAAMK,SAAS,UAAUD,QAAQ,aACjC,gBAAMD,KAAK,eAAeC,QAAQ,aAClC,gBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAZ,EAAKS,oBAAY,aAAjB,EAAmBK,SAAM,MAC/D,gBAAMH,KAAK,gBAAgBC,QAASlB,KACpC,gBAAMiB,KAAK,sBAAsBC,QAASJ,IACzCF,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","___EmotionJSX","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","description","children","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}